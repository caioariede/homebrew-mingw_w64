#! /bin/bash -e

# brew install-mingw-w64: A command to cross building mingw-w64 to Homebrewize.
#
# Usage:
#     brew install-mingw-w64
#
# Issues:
#   If exists, write here.
#
# This command is originated from: https://gist.github.com/Drakulix/9881160.
# Thanks for the original script auther and several suggested comment users!

help() {
    cat <<EOF
brew install-mingw-w64: A brew sub-command to cross building mingw-w64
and Homebrewize.
You can uninstall mingw-w64 Cellar with "brew uninstall mingw-w64".

Usage:
  brew install-mingw-w64
EOF
}

usage(){
        cat <<EOF
Usage:
  brew install-mingw-w64
EOF
}

__brew_install_mingw_w64() {
    # parse command line options
    while [[ $1 != '' ]]; do
        case $1 in
            -h | --help | -\?)
                help
                exit 0
                ;;
            --*)
                echo "unknown option -- ${1#--}"
                usage
                exit 1
                ;;
            *)
                echo "unknown option -- ${1#-}"
                usage
                exit 1
                ;;
        esac
        shift
    done

    # dependencies

    brew tap homebrew/versions

    brew install gcc49
    brew install gmp4 libmpc08 mpfr2 cloog018 isl011
    # brew install wget

    #  mingw

    VERSION="4.0.4"
    MINGW_W64_SHA256="89356a0aa8cf9f8b9dc8d92bc8dd01a131d4750c3acb30c6350a406316c42199"
    BINUTILS_VERSION="2.25.1"
    BINUTILS_SHA256="b5b14added7d78a8d1ca70b5cb75fef57ce2197264f4f5835326b0df22ac9f22"
    GCC_MAJOR="4.9"
    GCC_VERSION="4.9.3"
    GCC_SHA256="2332b2a5a321b57508b9031354a8503af6fdfb868b8c1748d33028d100a8b67e"
    PREFIX="${HOMEBREW_PREFIX}/Cellar/mingw-w64/${VERSION}"
    DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    cd $DIR

    mkdir -p source
    mkdir -p $PREFIX


    cd ./source
    if [ ! -f ${HOMEBREW_CACHE}/binutils-${BINUTILS_VERSION}.tar.bz2 ]; then
	echo "Downloading binutils\n"
        wget -O ${HOMEBREW_CACHE}/binutils-${BINUTILS_VERSION}.tar.bz2 http://ftpmirror.gnu.org/binutils/binutils-${BINUTILS_VERSION}.tar.bz2
    else
	echo "Already downloaded: ${HOMEBREW_CACHE}/binutils-${BINUTILS_VERSION}.tar.bz2\n"
    fi

    echo "Verify binutils-${BINUTILS_VERSION} sha256sum"
    echo "${BINUTILS_SHA256}  ${HOMEBREW_CACHE}/binutils-${BINUTILS_VERSION}.tar.bz2" | shasum -a256 -c /dev/stdin

    tar xjf ${HOMEBREW_CACHE}/binutils-${BINUTILS_VERSION}.tar.bz2 -C $DIR/source

    echo "Building binutils\n"
    echo "1/2 32-bit\n"

    cd binutils-${BINUTILS_VERSION}
    mkdir build
    cd build

    CC=gcc-${GCC_MAJOR} CXX=g++-${GCC_MAJOR} CPP=cpp-${GCC_MAJOR} LD=gcc-${GCC_MAJOR} ../configure --target=i686-w64-mingw32 --disable-werror --disable-multilib --prefix=$PREFIX --with-sysroot=$PREFIX
    make -j4
    make install-strip

    echo "2/2 64-bit\n"
    cd ..
    rm -rf build
    mkdir build
    cd build

    CC=gcc-${GCC_MAJOR} CXX=g++-${GCC_MAJOR} CPP=cpp-${GCC_MAJOR} LD=gcc-${GCC_MAJOR} ../configure --target=x86_64-w64-mingw32 --disable-werror --disable-multilib --prefix=$PREFIX --with-sysroot=$PREFIX --enable-64-bit-bfd
    make -j4
    make install-strip

    cd ..
    cd ..

    if [ ! -f ${HOMEBREW_CACHE}/mingw-w64-v${VERSION}.tar.bz2 ]; then
        echo "Downloading mingw-w64\n"
        wget -O ${HOMEBREW_CACHE}/mingw-w64-v${VERSION}.tar.bz2 "https://downloads.sourceforge.net/project/mingw-w64/mingw-w64/mingw-w64-release/mingw-w64-v${VERSION}.tar.bz2"
    else
        echo "Already downloaded: ${HOMEBREW_CACHE}/mingw-w64-v${VERSION}.tar.bz2\n"
    fi

    echo "Verify mingw-w64-v${VERSION} sha256sum"
    echo "${MINGW_W64_SHA256}  ${HOMEBREW_CACHE}/mingw-w64-v${VERSION}.tar.bz2" | shasum -a256 -c /dev/stdin

    tar xjf ${HOMEBREW_CACHE}/mingw-w64-v${VERSION}.tar.bz2 -C $DIR/source

    echo "Building mingw-headers\n"

    echo "1/2 32-bit\n"

    cd mingw-w64-v${VERSION}
    mkdir build-headers
    cd build-headers

    ../mingw-w64-headers/configure --host=i686-w64-mingw32 --prefix=$PREFIX/i686-w64-mingw32
    make -j4
    make install-strip

    cd $PREFIX/i686-w64-mingw32
    ln -s lib lib32
    cd $DIR/source/mingw-w64-v${VERSION}

    echo "2/2 64-bit\n"
    rm -rf build-headers
    mkdir build-headers
    cd build-headers

    ../mingw-w64-headers/configure --host=x86_64-w64-mingw32 --prefix=$PREFIX/x86_64-w64-mingw32
    make -j4
    make install-strip


    cd $PREFIX/x86_64-w64-mingw32
    ln -s lib lib64
    cd $DIR/source/


    if [ ! -f ${HOMEBREW_CACHE}/gcc-${GCC_VERSION}.tar.bz2 ]; then
        echo "Downloading gcc\n"
        wget -O ${HOMEBREW_CACHE}/gcc-${GCC_VERSION}.tar.bz2 http://ftpmirror.gnu.org/gcc/gcc-${GCC_VERSION}/gcc-${GCC_VERSION}.tar.bz2
    else
        echo "Already downloaded: ${HOMEBREW_CACHE}/gcc-${GCC_VERSION}.tar.bz2\n"
    fi

    echo "Verify gcc-${GCC_VERSION} sha256sum"
    echo "${GCC_SHA256}  ${HOMEBREW_CACHE}/gcc-${GCC_VERSION}.tar.bz2" | shasum -a256 -c /dev/stdin

    tar xjf ${HOMEBREW_CACHE}/gcc-${GCC_VERSION}.tar.bz2 -C $DIR/source

    echo "Building core gcc\n"

    echo "1/2 32-bit\n"


    cd $PREFIX
    ln -s i686-w64-mingw32 mingw

    cd $DIR/source/gcc-${GCC_VERSION}
    mkdir build32
    cd build32

    CC=gcc-${GCC_MAJOR} CXX=g++-${GCC_MAJOR} CPP=cpp-${GCC_MAJOR} LD=gcc-${GCC_MAJOR} PATH=${HOMEBREW_PREFIX}/mingw/bin/:$PATH ../configure --target=i686-w64-mingw32 --disable-multilib --enable-languages=c,c++,objc,obj-c++ --with-gmp=${HOMEBREW_PREFIX}/opt/gmp4/ --with-mpfr=${HOMEBREW_PREFIX}/opt/mpfr2/ --with-mpc=${HOMEBREW_PREFIX}/opt/libmpc08/ --with-cloog=${HOMEBREW_PREFIX}/opt/cloog018 --with-isl=${HOMEBREW_PREFIX}/opt/isl011/ --with-system-zlib --enable-version-specific-runtime-libs --enable-libstdcxx-time=yes --enable-stage1-checking --enable-checking=release --enable-lto --enable-threads=win32 --disable-sjlj-exceptions --prefix=$PREFIX --with-sysroot=$PREFIX

    PATH=${PREFIX}/bin/:$PATH make all-gcc -j4
    PATH=${PREFIX}/bin/:$PATH make install-gcc

    echo "2/2 64-bit\n"

    cd $PREFIX
    rm mingw
    ln -s x86_64-w64-mingw32 mingw

    cd $DIR/source/gcc-${GCC_VERSION}
    mkdir build64
    cd build64

    CC=gcc-${GCC_MAJOR} CXX=g++-${GCC_MAJOR} CPP=cpp-${GCC_MAJOR} LD=gcc-${GCC_MAJOR} PATH=${HOMEBREW_PREFIX}/mingw/bin/:$PATH ../configure --target=x86_64-w64-mingw32 --disable-multilib --enable-languages=c,c++,objc,obj-c++ --with-gmp=${HOMEBREW_PREFIX}/opt/gmp4/ --with-mpfr=${HOMEBREW_PREFIX}/opt/mpfr2/ --with-mpc=${HOMEBREW_PREFIX}/opt/libmpc08/ --with-cloog=${HOMEBREW_PREFIX}/opt/cloog018 --with-isl=${HOMEBREW_PREFIX}/opt/isl011/ --with-system-zlib --enable-version-specific-runtime-libs --enable-libstdcxx-time=yes --enable-stage1-checking --enable-checking=release --enable-lto --enable-threads=win32 --prefix=$PREFIX --with-sysroot=$PREFIX

    PATH=${PREFIX}/bin/:$PATH make all-gcc -j4
    PATH=${PREFIX}/bin/:$PATH make install-gcc

    echo "Building mingw runtime\n"

    cd $PREFIX
    rm mingw
    ln -s i686-w64-mingw32 mingw

    cd $DIR/source/mingw-w64-v${VERSION}
    mkdir build-crt
    cd build-crt

    echo "1/2 32-Bit\n"

    PATH=${PREFIX}/bin/:$PATH ../mingw-w64-crt/configure --host=i686-w64-mingw32 --prefix=$PREFIX/i686-w64-mingw32 --with-sysroot=$PREFIX

    PATH=${PREFIX}/bin/:$PATH make
    PATH=${PREFIX}/bin/:$PATH make install-strip

    echo "2/2 64-Bit\n"

    cd $PREFIX
    rm mingw
    ln -s x86_64-w64-mingw32 mingw

    cd $DIR/source/mingw-w64-v${VERSION}
    rm -rf build-crt
    mkdir build-crt
    cd build-crt

    PATH=${PREFIX}/bin/:$PATH ../mingw-w64-crt/configure --host=x86_64-w64-mingw32 --prefix=$PREFIX/x86_64-w64-mingw32 --with-sysroot=$PREFIX

    PATH=${PREFIX}/bin/:$PATH make
    PATH=${PREFIX}/bin/:$PATH make install-strip

    echo "Building all gcc\n"

    echo "1/2 32-Bit\n"

    cd $PREFIX
    rm mingw
    ln -s i686-w64-mingw32 mingw

    cd $DIR/source/gcc-${GCC_VERSION}/build32

    PATH=${PREFIX}/bin/:$PATH make
    PATH=${PREFIX}/bin/:$PATH make install-strip

    echo "2/2 64-Bit\n"

    cd $PREFIX
    rm mingw
    ln -s x86_64-w64-mingw32 mingw

    cd $DIR/source/gcc-${GCC_VERSION}/build64

    PATH=${PREFIX}/bin/:$PATH make
    PATH=${PREFIX}/bin/:$PATH make install-strip

    echo "Linking libgcc\n"

    cd $PREFIX/i686-w64-mingw32/lib
    ln -s ../../lib/gcc/i686-w64-mingw32/lib/libgcc_s.a ./

    cd $PREFIX/x86_64-w64-mingw32/lib
    ln -s ../../lib/gcc/x86_64-w64-mingw32/lib/libgcc_s.a ./

    echo "Building winpthreads\n"

    cd $DIR/source/mingw-w64-v${VERSION}/mingw-w64-libraries/winpthreads

    echo "1/2 32-Bit\n"

    mkdir -p build
    cd build

    PATH=${PREFIX}/bin/:$PATH ../configure --host=i686-w64-mingw32 --prefix=$PREFIX/i686-w64-mingw32
    PATH=${PREFIX}/bin/:$PATH make
    PATH=${PREFIX}/bin/:$PATH make install-strip

    cd ..
    rm -rf build

    echo "2/2 64-Bit\n"

    mkdir -p build
    cd build

    PATH=${PREFIX}/bin/:$PATH ../configure --host=x86_64-w64-mingw32 --prefix=$PREFIX/x86_64-w64-mingw32
    PATH=${PREFIX}/bin/:$PATH make
    PATH=${PREFIX}/bin/:$PATH make install-strip

    echo "Cleaning up\n"

    cd $DIR
    rm -rf source

    echo "Done"
}

__brew_install_mingw_w64 $*
